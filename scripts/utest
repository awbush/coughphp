#!/usr/bin/env php
<?php

// CHANGE THIS TO YOUR `simpletest` PATH. (e.g. if it's in the include path, set it to empty string).
define('SIMPLETEST_PATH', 'simpletest/');


/////////////////////////////////
// Don't change anything below //
/////////////////////////////////


// Check that we're running in command line mode with at least one argument
if (!isset($_SERVER['argc']) || !isset($_SERVER['argv']) || $_SERVER['argc'] < 2)
{
	print_usage();
	exit(1);
}

// Default options
$files = array();

// Parse command line options
$argc = $_SERVER['argc'];
$argv = $_SERVER['argv'];
for ($i = 1; $i < $argc; $i++)
{
	$files[] = $argv[$i];
}

// Function for printing usage info
function print_usage()
{
	$script = 'utest';
	
	echo 'NAME
	' . $script . ' -- run tests using the SimpleTest unit tester

SYNOPSIS
	' . $script . ' file [file...]

DESCRIPTION
	' . $script . ' takes one or more files that include test classes and
	passes them to the SimpleTest unit tester.

EXAMPLES
	Test one file in the current directory:
	
		' . $script . ' TestCoughCollection.class.php
	
	Test all files in the current directory that start with "Test" and end
	with ".php"
	
		' . $script . ' Test*.php

SEE ALSO
	Download SimpleTest from http://simpletest.sourceforge.net/
';
}


// simpletest is not strict compatible, so remove it
$oldErrorReporting = error_reporting();
error_reporting($oldErrorReporting & ~E_STRICT);

// Run Tests
require_once(SIMPLETEST_PATH . 'autorun.php');
$test = new TestSuite('Running Tests');
foreach ($files as $file)
{
	$test->addTestFile($file);
}
if (TextReporter::inCli())
{
	exit ($test->run(new TextReporter()) ? 0 : 1);
}
$test->run(new HtmlReporter());

?>